install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$hp, mtcars$cyl), mean)
x<-sapply(split(mtcars$hp, mtcars$cyl), mean)
x[3]-x[1]
library(datasets)
data(iris)
?iris
x<-meancolumn(iris)
colMeans(iris)
colMeans(iris$'Sepal.Length)
c
aa
)
''
srop
stop
stop()
q
'
colMeans(iris$Sepal.Length)
iris$Sepal.Length
sapply(split(iris$Species, iris$Sepal.Length), mean)
sapply(split(iris$Sepal.Length,iris$Species), mean)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
y
x
e
setwd("D:/Studies/R/HW4/rprog_data_ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
names(outcome)
outcome[, 11] <- as.numeric(outcome[, 11])
hist(outcome[, 11])
sp_state<-split(outcome,outcome$state)
sp_sindexes_state <- which(input$State == 'WA')
sp_sindexes_state <- which(outcome$State == 'WA')
sp_sindexes_state
dataset_state <- dataset[indexes_state,]
dataset_state <- outcome[indexes_state,]
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
dataset_state
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
?min
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
state <- 'TX'
outcome<-'heart failure'
rel_col<-0
if(outcome == 'heart attack')
{
rel_col <- 11
}
else if(outcome == 'heart failure')
{
rel_col <- 17
} else if(outcome == 'pneumonia')
{
rel_col <- 23
}
else
stop("invalid outcome.")
if(outcome == 'heart attack')
{
rel_col <- 11
}
rel_col
if(outcome == 'heart failure')
{
rel_col <- 17
}
rel_col
input <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
indexes_state <- which(input$State == state)
indexes_state
dataset_state <- input[indexes_state,]
min(dataset_state[,rel_col])
min(as.numeric(dataset_state[,rel_col]))
?min
min(as.numeric(dataset_state[,rel_col]), na.rm = TRUE)
index_min <- which(dataset_state[,rel_col] == min(as.numeric(dataset_state[,rel_col]), na.rm = TRUE))
dataset_state[index_min,2]
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
source("best.R")
best("TX", "heart attack")
state
outcome
rel_col
input
indexes_state <- which(input$State == state)
dataset_state <- input[indexes_state,]
index_min <- which(dataset_state[,rel_col] == min(as.numeric(dataset_state[,rel_col]), na.rm = TRUE))
dataset_state[index_min,2]
t<-suppressWarnings(as.numeric(my_file[,rel_col]));
t<-suppressWarnings(as.numeric(dataset_state[,rel_col]));
t
index_min <- which(dataset_state[,rel_col] == min(t, na.rm = TRUE))
dataset_state[index_min,2]
source("best.R")
best("TX", "heart attack")
input <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
indexes_state <- which(input$State == state)
if(length(indexes_state) == 0)
{
stop("invalid state.")
}
dataset_state <- input[indexes_state,]
t<-suppressWarnings(as.numeric(dataset_state[,rel_col]));
index_min <- which(dataset_state[,rel_col] == min(t, na.rm = TRUE))
dataset_state[index_min,2]
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("TX", "heart attack")
state
rel_col <- 11
input <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
indexes_state <- which(input$State == state)
dataset_state <- input[indexes_state,]
View(dataset_state)
t<-suppressWarnings(as.numeric(dataset_state[,rel_col]));
t
min(t, na.rm = TRUE)
index_min <- which(dataset_state[,rel_col] == min(t, na.rm = TRUE))
index_min
?as.numeric
t<-suppressWarnings(as.double(dataset_state[,rel_col]));
t
min(t, na.rm = TRUE)
?min
summery(t)
summary(t)
which(dataset_state[,rel_col] == 12)
which(t == 12)
source("best.R")
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source("submitscript3.R")
submit()
2
submit()
submit()
?order
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
state<-'TX'
num = "worst"
num <- "worst"
input <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
indexes_state <- which(input$State == state)
dataset_state <- input[indexes_state,]
t<-suppressWarnings(as.numeric(dataset_state[,rel_col]));
if(num == 'best')
{
index <- which(t == min(t, na.rm = TRUE))
}
index
if(num == 'worst')
{
index <- which(t == min(t, na.rm = TRUE))
}
index
dataset_state[index,2]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
source("rankhospital.R")
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
t
ord<-order(t,na.last=NA)
ord
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
dataset_state <- input[indexes_state,]
t<-suppressWarnings(as.numeric(dataset_state[,rel_col]));
t<-c(t,dataset_state[,2])
t
source("rankhospital.R")
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
dataset_state <- input[indexes_state,]
dataset_state[,rel_col]<-suppressWarnings(as.numeric(dataset_state[,rel_col]));
ord<-order(dataset_state[,rel_col],dataset_state[,2],na.last=NA)
out <- dataset_state[ord][num][,2]
dataset_state[ord]
ord
dataset_state[ord]
dataset_state[ord,2]
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
source("rankhospital.R")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
submit()
submit()
submit()
submit()
source("rankall.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart attack", 20), 10)
source("rankall.R")
source("rankall.R")
head(rankall("heart attack", 20), 10)
outcome
num
rel_col
input <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- unique(input$States)
states
input$States
states <- unique(input$State)
states
source("rankall.R")
head(rankall("heart attack", 20), 10)
states <- order(unique(input$State))
states
u <- unique(input$State)
u
states <- u[order(u)]
states
source("rankall.R")
head(rankall("heart attack", 20), 10)
submit
submit()
submit()
submit()
