install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$hp, mtcars$cyl), mean)
x<-sapply(split(mtcars$hp, mtcars$cyl), mean)
x[3]-x[1]
library(datasets)
data(iris)
?iris
x<-meancolumn(iris)
colMeans(iris)
colMeans(iris$'Sepal.Length)
c
aa
)
''
srop
stop
stop()
q
'
colMeans(iris$Sepal.Length)
iris$Sepal.Length
sapply(split(iris$Species, iris$Sepal.Length), mean)
sapply(split(iris$Sepal.Length,iris$Species), mean)
R.version.string
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
?read.csv
r <- read.csv(path2csv,stringsAsFactors = FALSE)
mydf <- read.csv(path2csv,stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf).
cran <- tbl_df(mydf)
?rm
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version), ip_id)
cran3 <- select(cran,ip_id,package,size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20 , size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package<-group_by(cran,package)
by_package
summerize(by_package , m = mean(size))
summarize(by_package , m = mean(size))
summarize(by_package , mean(size))
submit()
submit()
?n
?n_distinct
submit()
summarize(by_package,
count = n(),
unique = n_distinct(ip_id),
countries = n_distinct(country),
avg_bytes = mean(size))
submit()
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum,count>679)
top_counts
head(top_counts, 20)
arrange(top_counts,desc(count))
quantile(pack_sum$unique, probs = 0.99)
top_counts <- filter(pack_sum,unique>465)
top_unique <- filter(pack_sum,unique>465)
top_unique
arrange(top_counts,desc(top_unique))
arrange(top_unique,desc(unique))
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
setwd("D:/Studies/Getting and Cleaning Data/EX1")
input <- read.csv("getdata_data_ss06hid.csv")
pause()
pause
exit
exit()
?swirl
info()
play()
input <- read.csv("getdata_data_ss06hid.csv")
input
head(input)
fil<-input[which(input$VAL >= 1000000)]
fil
fil<-input[which(input$VAL >= 1000000,na.rm=TRUE)]
c<-which(input$VAL >= 1000000,na.rm=TRUE)
?which
fil<-input[which(input$VAL >= 1000000),na.rm=TRUE]
fil
fil<-input[which(input$VAL >= 1000000),]
fil
fil<-input[,which(input$VAL >= 1000000)]
fil
t<-subset(input,VAL >= 1000000)
t
nrow(t)
t<-subset(input,input$VAL >= 1000000)
t
t<-subset(input,VAL)
t<-subset(input,VAL<1000)
t
t$VAL
t<-subset(input,VAL = 24)
t
t$val
t$VAL
t<-subset(input,VAL == 24)
t
nrows(t)
nrow(t)
f<- input$FES
f
?read_xlsx
?read_xls
load(xls)
load(xlsx)
install.packages("xlsx")
library(xlsx)
input<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", sheetIndex = 1, header = TRUE)
head(input)
sub<-input(18:23,7:15)
sub<-input[18:23,7:15]
sub
sum(dat$Zip*dat$Ext,na.rm=T)
sum(sub$Zip*dat$Ext,na.rm=T)
dat<-sub
sum(dat$Zip*dat$Ext,na.rm=T)
sub
sub<-input[17:23,7:15]
sub
sub<-input[17:22,7:15]
dat<-input[17:22,7:15]
sum(dat$Zip*dat$Ext,na.rm=T)
dat
dat$Zip
dat<-subset(input,17:22,7:15)
dat<-input[18:23,]
dat
dat<-input[18:23,7:15]
dat
dat<-input[1,7:15]
dat
dat<-input[1,]
dat
dat<-input[c(1,18:23),7:15]
dat
dat<-input[18:23,7:15]
dat
dat<-input[17:23,7:15]
dat
dat<-input[18:23,7:15]
names(date)<-input[17]
names(date)<-input[17,]
input[17,]
input<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", sheetIndex = 1)
dat<-input[18:23,7:15]
dat
head(input)
input<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", sheetIndex = 1, header = TRUE)
names(input)
input[17,]
dat<-input[18:23,7:15]
names(dat)<-input[17,7:15]
dat
input[17,7:15]
c(input[17,7:15])
names(dat)<-c(input[17,7:15])
dat
rownames(input[17,7:15])
rownames(c(input[17,7:15]))
rownames(input[17,7:15])
input[17,7:15]
[input[17,7:15]]
input[[17,7:15]]
input[17,7:15][1]
input[17,7:15][[1]]
as.character(input[17,7:15])
as.character(input[17,7:15][1])
paste(input[17,7:15])
cat(input[17,7:15])
names(dat)<-c("Zip","CuCurrent",	"PaCurrent",	"PoCurrent",	"Contact",	"Ext",	"Fax",	"email",	"Status"
)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
dat$Zip
sum(dat$Zip*dat$Ext,na.rm=T)
dat$Ext
dat
dat$Zip
dat$Zip
?read.xlsx
input<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", sheetIndex = 1, header = TRUE , startRow = 17 ,endRow=23)
input
dat<-input[,7:15]
sum(dat$Zip*dat$Ext,na.rm=T)
dat$Zip
names(input)
input<-read.xlsx("getdata_data_DATA.gov_NGAP.xlsx", sheetIndex = 1, header = TRUE , startRow = 18 ,endRow=23)
input
dat<-input[,7:15]
sum(dat$Zip*dat$Ext,na.rm=T)
f<- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
f<- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv",destfile="d.csv")
?fread
?fread()
library(data.table)
install.packages(data.table)
install.packages("data.table")
library(data.table)
?fread
DT <- fread("d.csv")
DT <- fread("d.csv",header="true")
DT <- fread("d.csv",header=true)
DT <- fread("d.csv",header=TRUE)
DT <- fread("d.csv",header=TRUE,sep=",")
DT <- fread("d.csv",header=TRUE,sep=",",SEP2=",")
DT <- fread("d.csv",header=TRUE,sep=",",sep2=",")
DT <- fread("getdata_data_ss06pid.csv")
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
tapply(DT$pwgtp15,DT$SEX,mean)
system.time()
system.time(
for (i in 1:100)
{
tapply(DT$pwgtp15,DT$SEX,mean)
}
)
t1<-system.time(
for (i in 1:100)
{
tapply(DT$pwgtp15,DT$SEX,mean)
}
)
t2<-system.time(
for (i in 1:100)
{
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
}
)
t3<-system.time(
for (i in 1:100)
{
DT[,mean(pwgtp15),by=SEX]
}
)
t4<-system.time(
for (i in 1:100)
{
sapply(split(DT$pwgtp15,DT$SEX),mean)
}
)
c(t1,t2,t3,t4)
install.packages("xml")
install.packages("XML")
library(XML)
xmlParse("getdata_data_restaurants.xml")
input<-xmlParse(getdata_data_restaurants.xml)
input<-xmlParse("getdata_data_restaurants.xml")
input
root<-xmlRoot(input)
root
c<-xmlChildren(root)
c
xmlSize(c)
xmlName(c)
xmlName(c[1])
xmlName(c[[1]])
xmlName(c[[2]])
xmlName(c[[1]])
sapply(c, names)
sapply(c, xmlValue)
xmlSApply(c, xmlValue)
getNodeSet(root, "//zipcode")
nodes<-getNodeSet(root, "//zipcode")
nodes
nodes<-getNodeSet(root, "//zipcode" , c(zipcode="21231"))
nodes
nodes<-getNodeSet(root, "//zipcode" , c(zipcode=="21231"))
nodes<-getNodeSet(root, "//zipcode="21231"")
nodes<-getNodeSet(root, "//zipcode=21231")
nodes
nodes<-getNodeSet(root, "//zipcode==21231")
?getNodeSet
input<-xmlTreeParse("getdata_data_restaurants.xml",useInternal = TRUE)
v<-xpathSApply(dataXML,"//zipcode",xmlValue)
v<-xpathSApply(input,"//zipcode",xmlValue)
v
length(v[v=='21231'])
nxt()
library(tidyr)
students
?gather
gather(students,sex, count,-grade)
students2
res<-gather(students2,sex_class,count)
res<-gather(students2,sex_class,count,-grade)
res
?separate
separate(data = res, col = sex_class, into =
| c("sex", "class"))
separate(data = res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
submit()
?mutate
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed<-mutate(passed,status="passed")
failed<-mutate(failed,status="failed")
?rbind_list
rbind_list(passed, failed)
sat
submit()
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day<-today()
this_day
month(this_day)
wday(this_day)
wday(this_day,label = TRUE)
this_moment<-now()
this_moment
minute(this_moment)
my_date<-ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("--192012")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment<-update(this_moment, hours = 0, minutes = 17, seconds = 55)
this_moment
?now
nyc<-now("America/New_York")
nyc
depart<-nyc + days(2)
depart
depart<-update(depart,hours=17,minutes=34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive<-with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time<-mdy("June 17, 2008",tz = "Singapore")
last_time
?new_interval
how_long<-new_interval(last_time,arrive)
as.period(how_long)
stopwatch()
