install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$hp, mtcars$cyl), mean)
x<-sapply(split(mtcars$hp, mtcars$cyl), mean)
x[3]-x[1]
library(datasets)
data(iris)
?iris
x<-meancolumn(iris)
colMeans(iris)
colMeans(iris$'Sepal.Length)
c
aa
)
''
srop
stop
stop()
q
'
colMeans(iris$Sepal.Length)
iris$Sepal.Length
sapply(split(iris$Species, iris$Sepal.Length), mean)
sapply(split(iris$Sepal.Length,iris$Species), mean)
setwd("D:/Studies/Getting and Cleaning Data/EX3")
acs <- read.csv("getdata_data_ss06hid.csv")
agricultureLogical<-acs[,acs$ACR = '3' and acs$AGS='6']
agricultureLogical<-acs[,acs$ACR == '3' and acs$AGS=='6']
agricultureLogical<-acs[,acs$ACR == '3' & acs$AGS=='6']
agricultureLogical<-(acs[,acs$ACR == '3' & acs$AGS=='6')]
agricultureLogical<-acs[,(acs$ACR == '3' & acs$AGS=='6')]
agricultureLogical<-acs[(acs$ACR == '3' & acs$AGS=='6'),]
t<-acs[which(agricultureLogical),]
agricultureLogical<-acs[(acs$ACR == '3' & acs$AGS=='6')]
agricultureLogical<-(acs$ACR == '3' & acs$AGS=='6')
t<-acs[which(agricultureLogical),]
head(t)
head(t,1)
(head(t,3))$id
load(jpeg )
load(jpeg)
load_library(jpeg)
install.packages("jpeg")
library(jpeg)
?readJPEG
img <- readJPEG("getdata_jeff.jpg",native=TRUE)
img[30]
c(img[30],img[80])
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url,"jeff.jpg",mode="wb",method="curl")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(url,"jeff.jpg",mode="wb")
img <- readJPEG("jeff.jpg",native=TRUE)
c(img[30],img[80])
quantile(img, probs = c(0.3, 0.8))
library(dplyr)
?readcsv
?dplyr
ta <- read.csv('getdata_data_GDP.csv')
ta_df = tbl_df(ta)
tb <- read.csv('getdata_data_EDSTATS_Country.csv')
tb_df = tbl_df(tb)
names(ta_df)
names(tb_df)
ta <- read.csv('getdata_data_GDP.csv',skip=3)
names(ta)
ta_df = tbl_df(ta)
ta_df<-rename(ta_df,CountryCode=X)
d<-join(ta_df,tb_df)
d<-merge(ta_df,tb_df)
d<-merge(ta_df,tb_df, all = TRUE)
library(dplyr)
ta <- read.csv('getdata_data_GDP.csv',skip=3, nrows = 215)
ta_df = tbl_df(ta)
ta_df<-rename(ta_df,CountryCode=X)
tb <- read.csv('getdata_data_EDSTATS_Country.csv')
tb_df = tbl_df(tb)
d<-merge(ta_df,tb_df)
d<-merge(ta_df,tb_df, all = TRUE)
d<-merge(ta_df,tb_df, all = TRUE, by = c("CountryCode))
)
kl
,m,mjhnio
]
]
""
"
d<-merge(ta_df,tb_df, all = TRUE, by = c("CountryCode"))
d2<-merge(ta_df,tb_df)
sum(!is.na(unique(dt$rankingGDP)))
sum(!is.na(unique(d$rankingGDP)))
sum(!is.na(d$rankingGDP))
sum(!is.na(d$ranking))
sum(!is.na(d$Ranking))
sum(!is.na(unique(d$Ranking)))
sum(!is.na(unique(d2$Ranking)))
sum(!is.na(unique(d2$Ranking)))
library(dplyr)
ta <- read.csv('getdata_data_GDP.csv',skip=3, nrows = 215)
ta_df = tbl_df(ta)
ta_df<-rename(ta_df,CountryCode=X)
tb <- read.csv('getdata_data_EDSTATS_Country.csv')
tb_df = tbl_df(tb)
d<-d<-merge(ta_df,tb_df, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(d$Ranking)))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
f <- file.path(getwd(), "GDP.csv")
download.file(url, f)
dtGDP <- data.table(read.csv(f, skip = 4, nrows = 215))
dtGDP <- dtGDP[X != ""]
dtGDP <- dtGDP[, list(X, X.1, X.3, X.4)]
setnames(dtGDP, c("X", "X.1", "X.3", "X.4"), c("CountryCode", "rankingGDP",
"Long.Name", "gdp"))
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
f <- file.path(getwd(), "EDSTATS_Country.csv")
download.file(url, f)
dtEd <- data.table(read.csv(f))
dt <- merge(dtGDP, dtEd, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(dt$rankingGDP)))
library(dplyr)
ta <- read.csv('getdata_data_GDP.csv',skip=3, nrows = 215)
ta_df = tbl_df(ta)
ta_df<-rename(ta_df,CountryCode=X)
tb <- read.csv('getdata_data_EDSTATS_Country.csv')
tb_df = tbl_df(tb)
d<-merge(ta_df,tb_df, all = TRUE, by = c("CountryCode"))
sum(!is.na(unique(d$Ranking)))
t_d = tbl_df(d)
sorted <- arrange(t_d, desc(Ranking))
sorted[13]
sorted[13,]
sorted[13,1:7]
sorted[13,1:5]
sorted[13,1:4]
names(d_t)
names(t_d)
summarize(Income.Group,mean(Ranking,na.rm = TRUE))
summarize(group_by(t_d,Income.Group),mean(Ranking,na.rm = TRUE))
library(Hmisc)
install.packages("Hmisc")
library(Hmisc)
groups<- cut2(d$Ranking,g=5)
groups
table(groups)
d$groups<- cut2(d$Ranking,g=5)
dt[Income.Group == "Lower middle income", .N, by = c("Income.Group", "groups")]
d[Income.Group == "Lower middle income", .N, by = c("Income.Group", "groups")]
d[Income.Group == "Lower middle income", .N]
d[Income.Group == "Lower middle income",]
d
d$groups
table(d$groups,d$Income.Group)
table(d$Income.Group,d$groups)
t<-table(d$Income.Group,d$groups)
t[,"Lower middle income"]
t[1,"Lower middle income"]
t[1,]
t[,1]
t["Lower middle income",1]
setwd("D:/Studies/Getting and Cleaning Data/EX4")
ta <- read.csv('getdata_data_GDP.csv',skip=3, nrows = 215)
sp = strsplit(names(ta),"wgtp")
sp
sp = strsplit(ta$Economy,"wgtp")
ta <- read.csv('getdata_data_GDP.csv')
names(ta)
dt<-data.table(ta)
packages <- c("data.table", "quantmod")
sapply(packages, require, character.only=TRUE, quietly=TRUE)
library(data.table)
dt<-data.table(ta)
names(dt)
ta <- read.csv('getdata_data_ss06hid.csv')
sp = strsplit(names(ta),"wgtp")
sp[123]
ta <- read.csv('getdata_data_GDP.csv',skip=3, nrows = 215)
names(ta)
remove_commas <- function(x){gsub(",","",x)}
t<-sapply(ta,remove_commas)
t<-sapply(ta$US.dollars,remove_commas)
head(t)
head(ta)
mean(t[2,])
t[2,]
t[-1]
cal<-t[2:190]
cal
cal<-t[2:191]
cal
mean(cal)
mean(as.numeric(cal)
)
ta <- read.csv('getdata_data_GDP.csv',skip=3, nrows = 215)
remove_commas <- function(x){gsub(",","",x)}
t<-sapply(ta$US.dollars[2:191],remove_commas)
mean(as.numeric(t))
ta <- read.csv('getdata_data_GDP.csv',skip=3, nrows = 215)
names(ta)
countryNames<-ta$Economy
countryNames
grep("^United",countryNames)
grep("^United",countryNames,value=True)
grep("^United",countryNames,value=TRUE)
library(dplyr)
ta <- read.csv('getdata_data_GDP.csv',skip=3, nrows = 215)
ta_df = tbl_df(ta)
ta_df<-rename(ta_df,CountryCode=X)
tb <- read.csv('getdata_data_EDSTATS_Country.csv')
tb_df = tbl_df(tb)
d<-merge(ta_df,tb_df, all = TRUE, by = c("CountryCode"))
names(d)
notes<-d$Notes
notes
notes<-d$Special.Notes
notes
notes<-tolower(d$Special.Notes)
notes
length(grep("in",notes))
length(grep("fiscal year end",notes))
length(grep("fiscal year end:june",notes))
length(grep("fiscal year end.*june;",notes))
length(grep("fiscal year end: june",notes))
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
sampleTimes[1]
class(sampleTimes[1])
year(sampleTimes[1])
year(sampleTimes)
year(sampleTimes)==2015
length(year(sampleTimes)==2012)
length(sampleTimes[where(year(sampleTimes)==2012])
length(sampleTimes[where(year(sampleTimes)==2012)])
length(sampleTimes[which(year(sampleTimes)==2012)])
2012sample<-sampleTimes[which(year(sampleTimes)==2012)]
length(2012sample)
sample_2012<-sampleTimes[which(year(sampleTimes)==2012)]
length(sample_2012)
length(sample_2012[which(weekdays(sample_2012)=="Sunday")])
weekdays(sample_2012)
length(sample_2012[which(weekdays(sample_2012)=="Monday")])
