install.packages("KernSmooth")
load(KernSmooth)
library(KernSmooth)
find.package("devtools")
install.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
sapply(split(mtcars$hp, mtcars$cyl), mean)
x<-sapply(split(mtcars$hp, mtcars$cyl), mean)
x[3]-x[1]
library(datasets)
data(iris)
?iris
x<-meancolumn(iris)
colMeans(iris)
colMeans(iris$'Sepal.Length)
c
aa
)
''
srop
stop
stop()
q
'
colMeans(iris$Sepal.Length)
iris$Sepal.Length
sapply(split(iris$Species, iris$Sepal.Length), mean)
sapply(split(iris$Sepal.Length,iris$Species), mean)
setwd("D:/Studies/Getting and Cleaning Data/EX2")
?oauth_app
library(httr)
?oauth_app
oauth_endpoints("github")
myapp <- oauth_app("github", "842f997c72f603162eae",secret="09ee023758fbf4fda096b17f43a0ce14bdbe793f")
myapp
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
?install_package
install.packages("httpuv")
library(httpuv)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repo", gtoken)
req
stop_for_status(req)
content(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repo"))
stop_for_status(req)
req <- with_config(gtoken, GET("https://api.github.com/users/jtleek/repos"))
stop_for_status(req)
content(req)
c<-content(req)
c$created_at
c[1]
cur<-c$name='datasharing'
cur<-[c$name='datasharing']
cur<-c$name
cur
?sapply
cur<-c[match(name,'datasharing')]
cur<-c[match($name,'datasharing')]
c[[1]]
cont<-content(req)
cont[[1]]
cont[1]$name
cont[[1]]$name
sapply(cont, function(x) [x]$name = "ballgown")
sapply(cont, function(x) x$name = "ballgown")
sapply(cont, function(x) x$name == "ballgown")
cont[sapply(cont, function(x) x$name == "ballgown")]
t<-cont[sapply(cont, function(x) x$name == "ballgown")]
t<-cont[sapply(cont, function(x) x$name == "datasharing")]
t
t<-cont[sapply(cont, function(x) x$name == "datasharing")]
T$created_at
t$created_at
[t]
t[created_at]
t2<-cont[sapply(t, function(x) x$created_at)]
t2
t[1]
t[2]
t[1]$created_at
t<-cont[sapply(cont, function(x) x$name == "datasharing")][1]
t[1]
t<-cont[sapply(cont, function(x) x$name == "datasharing")]
t2<-t[1]
t2
t2<-t[[1]]
t2
t2$created_at
install.packages("sqldf")
library(sqldf)
?sqldf
read_csc?
asd
?read_csv
input <- read.csv("getdata_data_ss06pid.csv")
input
acs<-input
t<-sqldf("select * from acs where AGEP < 50 and pwgtp1")
t
nrows(t)
nrow(t)
t2<-sqldf("select * from acs where AGEP < 50")
nrow(t2)
t3<-sqldf("select pwgtp1 from acs where AGEP < 50")
nrow(t3)
ncol(t)
ncol(t2)
ncol(t3)
u<-unique(acs$AGEP)
size(u)
dim(u)
type(u)
length(u)
length(t1)
length(t2)
typeof(t2)
typeof(t3)
typeof(t)
typeof(u)
u
u1<-sqldf("select distinct AGEP from acs")
length(u1)
u1
u2<-sqldf("select unique * from acs")
u3<-sqldf("select unique AGEP from acs")
u3<-sqldf("select AGEP where unique from acs")
require(RCurl)
require(XML)
webpage <- getURL("http://biostat.jhsph.edu/~jleek/contact.html")
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
nchar(webpage[10])
c(nchar(webpage[10]),nchar(webpage[20]),nchar(webpage[30]),nchar(webpage[100])
)
t<-read.fwf("getdata_wksst8110.for")
?read.fwf
t<-read.fwf("getdata_wksst8110.for",skip=4,widths=c(9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3))
t
head(t)
t<-read.fwf("getdata_wksst8110.for",skip=4,widths=c(-1,9,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3,-5,4,-1,3))
head(t)
t$V4
sum(t$V4)
require(RCurl)
require(XML)
webpage <- getURL("http://biostat.jhsph.edu/~jleek/contact.html")
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
c(nchar(webpage[10]),nchar(webpage[20]),nchar(webpage[30]),nchar(webpage[100]))
